CREATE DATABASE IF NOT EXISTS isaData;
USE isaData;

-- Tabela de Perguntas
CREATE TABLE IF NOT EXISTS perguntas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    pergunta TEXT,
    alternativa_a TEXT,
    alternativa_b TEXT,
    alternativa_c TEXT,
    alternativa_d TEXT,
    resposta_correta CHAR(1),
    tag_1 VARCHAR(255),
    tag_2 VARCHAR(255),
    tag_3 VARCHAR(255)
);

-- Tabela de Professores
CREATE TABLE IF NOT EXISTS professores (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    senha VARCHAR(255) NOT NULL,
    bgcolor VARCHAR(10)
);

-- Tabela de Alunos
CREATE TABLE IF NOT EXISTS alunos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    senha VARCHAR(255) NOT NULL,
    material_formato VARCHAR(45) NOT NULL,
    turno VARCHAR(45) NOT NULL,
    bgcolor VARCHAR(10)
);

-- Tabela de Turmas
CREATE TABLE IF NOT EXISTS turmas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    professor_id INT,
    codigo INT NOT NULL UNIQUE,
    bgcolor VARCHAR(45), 
    FOREIGN KEY (professor_id) REFERENCES professores(id)
);

-- Tabela de Associação entre Turmas e Alunos
CREATE TABLE IF NOT EXISTS turma_alunos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    turma_id INT,
    aluno_id INT,
    FOREIGN KEY (turma_id) REFERENCES turmas(id),
    FOREIGN KEY (aluno_id) REFERENCES alunos(id)
);

-- Tabela de Listas de Perguntas
CREATE TABLE IF NOT EXISTS listas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(255) NOT NULL
);

-- Tabela de Associação entre Listas e Perguntas
CREATE TABLE IF NOT EXISTS lista_perguntas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    lista_id INT,
    pergunta_id INT,
    FOREIGN KEY (lista_id) REFERENCES listas(id),
    FOREIGN KEY (pergunta_id) REFERENCES perguntas(id)
);

-- Tabela de Associação entre Turmas e Listas
CREATE TABLE IF NOT EXISTS turma_listas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    turma_id INT,
    lista_id INT,
    FOREIGN KEY (turma_id) REFERENCES turmas(id),
    FOREIGN KEY (lista_id) REFERENCES listas(id)
);

-- Tabela de Respostas
CREATE TABLE IF NOT EXISTS respostas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    aluno_id INT,
    pergunta_id INT,
    lista_id INT,
    resposta CHAR(1),
    FOREIGN KEY (aluno_id) REFERENCES alunos(id),
    FOREIGN KEY (pergunta_id) REFERENCES perguntas(id),
    FOREIGN KEY (lista_id) REFERENCES listas(id)
);

-- Tabela de Resultados das Listas
CREATE TABLE IF NOT EXISTS resultado_listas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    aluno_id INT NOT NULL,
    lista_id INT NOT NULL,
    tags TEXT,
    tagCons TEXT,
    turno VARCHAR(45),
    score INT,
    formato VARCHAR(255),
    FOREIGN KEY (aluno_id) REFERENCES alunos(id),
    FOREIGN KEY (lista_id) REFERENCES listas(id)
);


-- Tabela de Referências
CREATE TABLE IF NOT EXISTS referencias (
    id INT AUTO_INCREMENT PRIMARY KEY,
    turma_id INT NOT NULL,
    ref TEXT,
    tag VARCHAR(255),
    formato VARCHAR(255),
    FOREIGN KEY (turma_id) REFERENCES turmas(id)
);


-- Tabela de Grupos
CREATE TABLE IF NOT EXISTS grupos_AG (
    id INT AUTO_INCREMENT PRIMARY KEY,
    aluno_id INT NOT NULL,
    turma_id INT NOT NULL,
    lista_id INT NOT NULL,
    grupo_id INT NOT NULL,
    FOREIGN KEY (aluno_id) REFERENCES alunos(id),
    FOREIGN KEY (turma_id) REFERENCES turmas(id),
    FOREIGN KEY (lista_id) REFERENCES listas(id)
);

-- Tabela de Chamada
CREATE TABLE IF NOT EXISTS chamada_API (
    id INT AUTO_INCREMENT PRIMARY KEY,
    acao_chamada BOOLEAN NOT NULL,
    turma_id INT NOT NULL,
    lista_id INT NOT NULL,
    FOREIGN KEY (turma_id) REFERENCES turmas(id),
    FOREIGN KEY (lista_id) REFERENCES listas(id)
);










use isaData;
INSERT INTO alunos (nome, email, senha, material_formato, turno, bgcolor) VALUES
('Alice Silva', 'alice.silva@example.com', '123', 'Video', 'Manhã', '#a3c2c2'),
('Bruno Souza', 'bruno.souza@example.com', '123', 'Quiz', 'Manhã', '#b2d8b4'),
('Carla Pereira', 'carla.pereira@example.com', '123', 'Artigo', 'Noite', '#f6b1b1'),
('Daniel Oliveira', 'daniel.oliveira@example.com', '123', 'Livro', 'Tarde', '#e5e0ff'),
('Elisa Costa', 'elisa.costa@example.com', '123', 'Video', 'Manhã', '#f7c4a8'),
('Fernando Lima', 'fernando.lima@example.com', '123', 'Video', 'Tarde', '#d0d0d0'),
('Gabriela Almeida', 'gabriela.almeida@example.com', '123', 'Livro', 'Noite', '#d0d0d0'),
('Hugo Fernandes', 'hugo.fernandes@example.com', '123', 'Artigo', 'Noite', '#f5f5dc'),
('Isabela Rocha', 'isabela.rocha@example.com', '123', 'Video', 'Manhã', '#a3c2c2'),
('João Mendes', 'joao.mendes@example.com', '123', 'Quiz', 'Tarde', '#a3c2c2');

INSERT INTO professores (nome, email, senha, bgcolor) VALUES ( "Ana Júlia", 'anajulia@gmail.com', '123', '#a3c2c2');
INSERT INTO turmas ( nome, professor_id, codigo, bgcolor) VALUES ('Programação', '1', '452316', '#ffd1c0');
INSERT INTO turma_alunos (turma_id, aluno_id) VALUES ('1', '1');
INSERT INTO turma_alunos (turma_id, aluno_id) VALUES ('1', '2');
INSERT INTO turma_alunos (turma_id, aluno_id) VALUES ('1', '3');
INSERT INTO turma_alunos (turma_id, aluno_id) VALUES ('1', '4');
INSERT INTO turma_alunos (turma_id, aluno_id) VALUES ('1', '5');
INSERT INTO turma_alunos (turma_id, aluno_id) VALUES ('1', '6');
INSERT INTO turma_alunos (turma_id, aluno_id) VALUES ('1', '7');
INSERT INTO turma_alunos (turma_id, aluno_id) VALUES ('1', '8');
INSERT INTO turma_alunos (turma_id, aluno_id) VALUES ('1', '9');
INSERT INTO turma_alunos (turma_id, aluno_id) VALUES ('1', '10');

INSERT INTO listas  (nome) VALUES ('Conhecimento de Programação');

INSERT INTO perguntas (pergunta, alternativa_a, alternativa_b, alternativa_c, alternativa_d, resposta_correta, tag_1, tag_2, tag_3) VALUES
("O que é uma variável em programação?", "Um espaço na memória", "Um tipo de dado", "Uma função", "Uma constante", "a", "Conceitos", "Variáveis", "Fundamentos"),
("Qual a diferença entre uma função e um método?", "Nenhuma diferença", "Função é global e método é associado a um objeto", "Método é global e função é associada a um objeto", "Ambos são a mesma coisa", "b", "Funções", "Programação Orientada a Objetos", "Fundamentos"),
("O que é um loop e quais os tipos mais comuns?", "Uma estrutura de controle", "Um tipo de dado", "Uma função matemática", "Um operador", "a", "Estruturas de Controle", "Loops", "Fundamentos"),
("Como funciona o conceito de herança em programação orientada a objetos?", "Permite que uma classe herde características de outra", "Permite criar variáveis globais", "Permite definir constantes", "Permite gerenciar memória", "a", "Programação Orientada a Objetos", "Herança", "Conceitos"),
("O que é uma estrutura de dados e quais são as mais comuns?", "Formas de organizar e armazenar dados", "Funções matemáticas", "Variáveis globais", "Constantes", "a", "Estruturas de Dados", "Conceitos", "Fundamentos"),
("Qual a diferença entre compilação e interpretação?", "Compilação traduz o código de uma vez, interpretação linha a linha", "Interpretação traduz o código de uma vez, compilação linha a linha", "Ambos fazem a mesma coisa", "Nenhuma diferença", "a", "Compiladores", "Fundamentos", "Conceitos"),
("O que é um algoritmo de ordenação e quais os mais utilizados?", "Métodos para organizar dados", "Tipos de variáveis", "Estruturas de controle", "Operadores", "a", "Algoritmos", "Estruturas de Dados", "Fundamentos"),
("Como funciona o gerenciamento de memória em linguagens de programação?", "Através de alocação e desalocação de memória", "Através de variáveis globais", "Através de funções matemáticas", "Através de constantes", "a", "Memória", "Fundamentos", "Conceitos"),
("O que é programação funcional e como ela difere da programação imperativa?", "Programação funcional usa funções puras, imperativa usa instruções sequenciais", "Ambas são a mesma coisa", "Imperativa usa funções puras, funcional usa instruções sequenciais", "Nenhuma diferença", "a", "Programação Funcional", "Paradigmas", "Fundamentos"),
("Quais são as vantagens do uso de frameworks em desenvolvimento de software?", "Facilitam o desenvolvimento e manutenção", "Criam novas linguagens", "Substituem os compiladores", "Eliminam a necessidade de variáveis", "a", "Frameworks", "Desenvolvimento", "Ferramentas");


INSERT INTO referencias (turma_id, ref, tag, formato) VALUES
(1, 'https://www.coursera.org/learn/python', 'Estruturas de Controle', 'Vídeo'),
(1, 'The Pragmatic Programmer by Andrew Hunt and David Thomas', 'Estrutura de Dados', 'Livro'),
(1, 'https://www.geeksforgeeks.org/basics-of-programming/', 'Conceitos', 'Artigo'),
(1, 'https://www.w3schools.com/quiztest/quiztest.asp?qtest=CPP', 'Conceitos', 'Quiz'),
(1, 'https://www.khanacademy.org/computing/computer-programming/pjs/variables/p/intro-to-variables', 'Variáveis', 'Vídeo'),
(1, 'Python Crash Course by Eric Matthes', 'Variáveis', 'Livro'),
(1, 'https://realpython.com/python-variables/', 'Variáveis', 'Artigo'),
(1, 'https://www.codecademy.com/courses/learn-python-3/quizzes/python3_variables', 'Frameworks', 'Quiz'),
(1, 'https://www.youtube.com/watch?v=SzJ46YA_RaA', 'Fundamentos', 'Vídeo'),
(1, 'Computer Science Distilled by Wladston Ferreira Filho', 'Fundamentos', 'Livro'),
(1, 'https://www.tutorialspoint.com/computer_fundamentals/index.htm', 'Frameworks', 'Artigo'),
(1, 'https://www.proprofs.com/quiz-school/story.php?title=computer-science-fundamentals-quiz', 'Fundamentos', 'Quiz');

INSERT INTO lista_perguntas (lista_id , pergunta_id) VALUES ('1', '1');
INSERT INTO lista_perguntas (lista_id , pergunta_id) VALUES ('1', '2');
INSERT INTO lista_perguntas (lista_id , pergunta_id) VALUES ('1', '3');
INSERT INTO lista_perguntas (lista_id , pergunta_id) VALUES ('1', '4');
INSERT INTO lista_perguntas (lista_id , pergunta_id) VALUES ('1', '5');
INSERT INTO lista_perguntas (lista_id , pergunta_id) VALUES ('1', '6');
INSERT INTO lista_perguntas (lista_id , pergunta_id) VALUES ('1', '7');
INSERT INTO lista_perguntas (lista_id , pergunta_id) VALUES ('1', '8');
INSERT INTO lista_perguntas (lista_id , pergunta_id) VALUES ('1', '9');
INSERT INTO lista_perguntas (lista_id , pergunta_id) VALUES ('1', '10');

INSERT INTO turma_listas (turma_id, lista_id) VALUES ('1', '1');

INSERT INTO respostas (aluno_id, pergunta_id, lista_id, resposta) VALUES
-- Aluno 1
(1, 1, 1, 'a'),
(1, 2, 1, 'a'),
(1, 3, 1, 'a'),
(1, 4, 1, 'a'),
(1, 5, 1, 'c'),
(1, 6, 1, 'a'),
(1, 7, 1, 'b'),
(1, 8, 1, 'b'),
(1, 9, 1, 'b'),
(1, 10, 1, 'a'),
-- Aluno 2
(2, 1, 1, 'a'),
(2, 2, 1, 'd'),
(2, 3, 1, 'd'),
(2, 4, 1, 'a'),
(2, 5, 1, 'c'),
(2, 6, 1, 'a'),
(2, 7, 1, 'c'),
(2, 8, 1, 'c'),
(2, 9, 1, 'c'),
(2, 10, 1, 'b'),
-- Aluno 3
(3, 1, 1, 'd'),
(3, 2, 1, 'a'),
(3, 3, 1, 'a'),
(3, 4, 1, 'd'),
(3, 5, 1, 'c'),
(3, 6, 1, 'd'),
(3, 7, 1, 'b'),
(3, 8, 1, 'd'),
(3, 9, 1, 'b'),
(3, 10, 1, 'a'),
-- Aluno 4
(4, 1, 1, 'a'),
(4, 2, 1, 'a'),
(4, 3, 1, 'd'),
(4, 4, 1, 'a'),
(4, 5, 1, 'a'),
(4, 6, 1, 'a'),
(4, 7, 1, 'b'),
(4, 8, 1, 'b'),
(4, 9, 1, 'a'),
(4, 10, 1, 'a'),
-- Aluno 5
(5, 1, 1, 'c'),
(5, 2, 1, 'a'),
(5, 3, 1, 'a'),
(5, 4, 1, 'a'),
(5, 5, 1, 'c'),
(5, 6, 1, 'c'),
(5, 7, 1, 'b'),
(5, 8, 1, 'd'),
(5, 9, 1, 'd'),
(5, 10, 1, 'd'),
-- Aluno 6
(6, 1, 1, 'd'),
(6, 2, 1, 'd'),
(6, 3, 1, 'd'),
(6, 4, 1, 'a'),
(6, 5, 1, 'c'),
(6, 6, 1, 'a'),
(6, 7, 1, 'b'),
(6, 8, 1, 'b'),
(6, 9, 1, 'b'),
(6, 10, 1, 'd'),
-- Aluno 7
(7, 1, 1, 'd'),
(7, 2, 1, 'a'),
(7, 3, 1, 'b'),
(7, 4, 1, 'a'),
(7, 5, 1, 'c'),
(7, 6, 1, 'b'),
(7, 7, 1, 'b'),
(7, 8, 1, 'b'),
(7, 9, 1, 'b'),
(7, 10, 1, 'b'),
-- Aluno 8
(8, 1, 1, 'a'),
(8, 2, 1, 'd'),
(8, 3, 1, 'a'),
(8, 4, 1, 'a'),
(8, 5, 1, 'd'),
(8, 6, 1, 'd'),
(8, 7, 1, 'd'),
(8, 8, 1, 'b'),
(8, 9, 1, 'b'),
(8, 10, 1, 'd'),
-- Aluno 9
(9, 1, 1, 'b'),
(9, 2, 1, 'b'),
(9, 3, 1, 'a'),
(9, 4, 1, 'a'),
(9, 5, 1, 'd'),
(9, 6, 1, 'a'),
(9, 7, 1, 'b'),
(9, 8, 1, 'c'),
(9, 9, 1, 'b'),
(9, 10, 1, 'a'),
-- Aluno 10
(10, 1, 1, 'd'),
(10, 2, 1, 'a'),
(10, 3, 1, 'd'),
(10, 4, 1, 'd'),
(10, 5, 1, 'c'),
(10, 6, 1, 'd'),
(10, 7, 1, 'c'),
(10, 8, 1, 'a'),
(10, 9, 1, 'b'),
(10, 10, 1, 'b');




INSERT INTO resultado_listas (aluno_id, lista_id, tags, tagCons, turno, score, formato) VALUES 
('1', '1', 'Estruturas de Controle,Memória,Frameworks', "Conceitos,Variáveis,Fundamentos", 'Manhã', 8, 'Video'),
('2', '1', 'Estruturas de Controle,Fundamentos,Frameworks', "Memória,Programação Orientada a Objetos,Conceitos", 'Manhã', 9, 'Quiz'),
('3', '1', 'Conceitos,Memória,Frameworks', "Estruturas de Controle,Loops,Fundamentos", 'Noite', 7, 'Artigo'),
('4', '1', 'Estruturas de Controle', "Conceitos,Variáveis,Fundamentos", 'Tarde', 6, 'Livro'),
('5', '1', 'Conceitos,Memória,Frameworks', "Funções,Programação Orientada a Objetos,Fundamentos", 'Manhã', 9, 'Vídeo'),
('6', '1', 'Loops,Memória,Programação Orientada a Objetos', "Conceitos,Variáveis,Fundamentos", 'Tarde', 7, 'Vídeo'),
('7', '1', 'Loops,Memória,Programação Orientada a Objetos', "Memória,Fundamentos,Conceitos", 'Noite', 3, 'Livro'),
('8', '1', 'Estruturas de Controle,Memória,Frameworks', "Conceitos,Variáveis,Fundamentos", 'Noite', 0, 'Artigo'),
('9', '1', 'Estruturas de Controle,Fundamentos,Programação Orientada a Objetos', "Frameworks,Desenvolvimento,Ferramentas", 'Manhã', 6, 'Vídeo'),
('10', '1', 'Conceitos,Memória,Frameworks', "Estruturas de Controle,Loops,Fundamentos", 'Tarde', 7, 'Quiz');





